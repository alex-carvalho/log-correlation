version: "2.6"
services:
  servicea:
    build: ./serviceA
    ports:
      - "8080:8080"
    environment:
      - SERVICE_B_URL=http://serviceb:8180

  serviceb:
    build: ./serviceB
    environment:
      - SERVICE_C_URL=http://servicec:8280
      - SERVICE_D_URL=http://serviced:8380

  servicec:
    build: ./serviceC

  serviced:
    build: ./serviceD

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.2
    environment:
       - "discovery.type=single-node"
       - "ES_JAVA_OPTS=-Xmx512m -Xms512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1

    volumes:
      - type: bind
        source: ./elasticsearch/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true

  logstash:
    image: docker.elastic.co/logstash/logstash:7.9.2
    volumes:
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    depends_on:
      - elasticsearch

  logspout:
    image: bekt/logspout-logstash
    restart: on-failure
    environment:
      ROUTE_URIS: logstash://logstash:5000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - logstash

  kibana:
    image: docker.elastic.co/kibana/kibana:7.9.2
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    volumes:
      - type: bind
        source: ./kibana/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
